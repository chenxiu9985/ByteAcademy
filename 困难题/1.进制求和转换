def solution(binary1, binary2):
    """
    binary1 + binary2，二进制加法，得到一个二进制data，转成十进制
    """
    # 补齐两个二进制字符串到相同长度
    max_length = max(len(binary1), len(binary2))
    binary1 = binary1.zfill(max_length)
    binary2 = binary2.zfill(max_length)
    # 用于存储进位
    carry = 0
    result = ""
    # 从低位开始逐位相加
    for i in range(max_length - 1, -1, -1):
        digit1 = int(binary1[i])
        digit2 = int(binary2[i])
        # 相加并加上进位
        sum_digits = digit1 + digit2 + carry
        # 计算当前位的结果和新的进位
        result_digit = sum_digits % 2
        carry = sum_digits // 2
        # 将当前位结果添加到结果字符串
        result = str(result_digit) + result
    # 如果最后还有进位，添加到结果字符串开头
    if carry:
        result = "1" + result

    return str(int(result, 2))

if __name__ == "__main__":
    #  You can add more test cases here
    print(solution("101", "110") == "11")
    print(solution("111111", "10100") == "83")
    print(solution("111010101001001011", "100010101001") == "242420")
    print(solution("111010101001011", "10010101001") == "31220")
